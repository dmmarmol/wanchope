{"version":3,"sources":["style.scss","../../node_modules/normalize.css/_normalize.scss","style.css","_helpers.scss","../../node_modules/scut/dist/_scut.scss","_library.scss","_general.scss","_config.scss","_layout.scss","_menus.scss","_navigation.scss","_sidebar.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["// ==== STYLES ==== //\r\n\r\n// Do not declare anything before the metadata block; this first section is solely for variable, function, and mixin definitions\r\n// Note: `bower_components` is already in Sass's path\r\n\r\n// Scut, a Sass utilities library: https://davidtheclark.github.io/scut/\r\n@import \"scut\";\r\n\r\n// Configuration variables and settings\r\n@import \"config\";\r\n\r\n// Library: mixins, functions, etc. specific to this theme\r\n@import \"library\";\r\n\r\n/*!\r\nTheme Name: #{metadata(theme-name)}\r\nTheme URI: #{metadata(theme-uri)}\r\nAuthor: #{metadata(theme-author)}\r\nAuthor URI: #{metadata(theme-author-uri)}\r\nDescription: #{metadata(theme-description)}\r\nVersion: #{metadata(theme-version)}\r\nLicense: #{metadata(theme-license)}\r\nLicense URI: #{metadata(theme-license-uri)}\r\nTags: #{metadata(theme-tags)}\r\nText Domain: #{metadata(theme-text-domain)}\r\nDomain Path: #{metadata(theme-text-domain-path)}\r\n*/\r\n\r\n// Reset: eliminate default browser styling (optional; commented out by default)\r\n//@import \"reset\";\r\n\r\n// Normalize: make browsers render things more consistently\r\n@import \"normalize\";\r\n\r\n// Everything else\r\n@import \"helpers\";\r\n@import \"general\";\r\n@import \"layout\";\r\n@import \"menus\";\r\n@import \"navigation\";\r\n@import \"sidebar\";\r\n","/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */\n\n/**\n * 1. Change the default font family in all browsers (opinionated).\n * 2. Correct the line height in all browsers.\n * 3. Prevent adjustments of font size after orientation changes in IE and iOS.\n */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  line-height: 1.15; /* 2 */\n  -ms-text-size-adjust: 100%; /* 3 */\n  -webkit-text-size-adjust: 100%; /* 3 */\n}\n\n/**\n * Remove the margin in all browsers (opinionated).\n */\n\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n * 1. Add the correct display in Edge, IE, and Firefox.\n * 2. Add the correct display in IE.\n */\n\narticle,\naside,\ndetails, /* 1 */\nfigcaption,\nfigure,\nfooter,\nheader,\nmain, /* 2 */\nmenu,\nnav,\nsection,\nsummary { /* 1 */\n  display: block;\n}\n\n/**\n * Add the correct display in IE 9-.\n */\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in iOS 4-7.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Add the correct display in IE 10-.\n * 1. Add the correct display in IE.\n */\n\ntemplate, /* 1 */\n[hidden] {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\n\na {\n  background-color: transparent; /* 1 */\n  -webkit-text-decoration-skip: objects; /* 2 */\n}\n\n/**\n * Remove the outline on focused links when they are also active or hovered\n * in all browsers (opinionated).\n */\n\na:active,\na:hover {\n  outline-width: 0;\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * 1. Remove the bottom border in Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\n\nb,\nstrong {\n  font-weight: inherit;\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * Add the correct font style in Android 4.3-.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/**\n * Add the correct background and color in IE 9-.\n */\n\nmark {\n  background-color: #ff0;\n  color: #000;\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10-.\n */\n\nimg {\n  border-style: none;\n}\n\n/**\n * Hide the overflow in IE.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct margin in IE 8.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change font properties to `inherit` in all browsers (opinionated).\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Restore the font weight unset by the previous rule.\n */\n\noptgroup {\n  font-weight: bold;\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n *    controls in Android 4.\n * 2. Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\nhtml [type=\"button\"], /* 1 */\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Change the border, margin, and padding in all browsers (opinionated).\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Remove the default vertical scrollbar in IE.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.\n */\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Correct the text style of placeholders in Chrome, Edge, and Safari.\n */\n\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n","/*\n* Scut, a collection of Sass utilities\n* to ease and improve our implementations of common style-code patterns.\n* v1.4.0\n* Docs at http://davidtheclark.github.io/scut\n*/\n/*!\r\nTheme Name: Wanchope\r\nTheme URI: https://github.com/dmmarmol/wanchope\r\nAuthor: Diego Martin Marmol\r\nAuthor URI: http://synapticism.com\r\nDescription: Personal blog theme based in [this](https://github.com/synapticism/wordpress-gulp-starter-kit) starter kit\r\nVersion: 0.0.1\r\nLicense: GPLv3\r\nLicense URI: http://www.gnu.org/licenses/gpl.txt\r\nTags: light, responsive-layout, right-sidebar, starter-theme, two-columns, translation-ready, white\r\nText Domain: wanchope\r\nDomain Path: /languages/\r\n*/\n/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */\n/**\n * 1. Change the default font family in all browsers (opinionated).\n * 2. Correct the line height in all browsers.\n * 3. Prevent adjustments of font size after orientation changes in IE and iOS.\n */\nhtml {\n  font-family: sans-serif;\n  /* 1 */\n  line-height: 1.15;\n  /* 2 */\n  -ms-text-size-adjust: 100%;\n  /* 3 */\n  -webkit-text-size-adjust: 100%;\n  /* 3 */ }\n\n/**\n * Remove the margin in all browsers (opinionated).\n */\nbody {\n  margin: 0; }\n\n/* HTML5 display definitions\n   ========================================================================== */\n/**\n * Add the correct display in IE 9-.\n * 1. Add the correct display in Edge, IE, and Firefox.\n * 2. Add the correct display in IE.\n */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  /* 1 */\n  display: block; }\n\n/**\n * Add the correct display in IE 9-.\n */\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; }\n\n/**\n * Add the correct display in iOS 4-7.\n */\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline; }\n\n/**\n * Add the correct display in IE 10-.\n * 1. Add the correct display in IE.\n */\ntemplate,\n[hidden] {\n  display: none; }\n\n/* Links\n   ========================================================================== */\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\na {\n  background-color: transparent;\n  /* 1 */\n  -webkit-text-decoration-skip: objects;\n  /* 2 */ }\n\n/**\n * Remove the outline on focused links when they are also active or hovered\n * in all browsers (opinionated).\n */\na:active,\na:hover {\n  outline-width: 0; }\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * 1. Remove the bottom border in Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */ }\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\nb,\nstrong {\n  font-weight: inherit; }\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder; }\n\n/**\n * Add the correct font style in Android 4.3-.\n */\ndfn {\n  font-style: italic; }\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n/**\n * Add the correct background and color in IE 9-.\n */\nmark {\n  background-color: #ff0;\n  color: #000; }\n\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%; }\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -0.25em; }\n\nsup {\n  top: -0.5em; }\n\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10-.\n */\nimg {\n  border-style: none; }\n\n/**\n * Hide the overflow in IE.\n */\nsvg:not(:root) {\n  overflow: hidden; }\n\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/**\n * Add the correct margin in IE 8.\n */\nfigure {\n  margin: 1em 40px; }\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */ }\n\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change font properties to `inherit` in all browsers (opinionated).\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit;\n  /* 1 */\n  margin: 0;\n  /* 2 */ }\n\n/**\n * Restore the font weight unset by the previous rule.\n */\noptgroup {\n  font-weight: bold; }\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible; }\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none; }\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n *    controls in Android 4.\n * 2. Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\nhtml [type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n  /* 2 */ }\n\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0; }\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\n/**\n * Change the border, margin, and padding in all browsers (opinionated).\n */\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em; }\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */ }\n\n/**\n * Remove the default vertical scrollbar in IE.\n */\ntextarea {\n  overflow: auto; }\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */ }\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.\n */\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/**\n * Correct the text style of placeholders in Chrome, Edge, and Safari.\n */\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54; }\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */ }\n\n.wrap-main:after, .menu-inline:after, .nav-posts:after {\n  content: \"\";\n  display: table;\n  clear: both; }\n\n.site-description, .menu-inline > li > ul, .menu-inline ul > li > ul {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px; }\n\n.site-content {\n  margin-bottom: 30px; }\n\n.site-content article {\n  margin-bottom: 60px; }\n\n.nav-posts {\n  margin-bottom: 90px; }\n\nhtml {\n  font-size: 18px; }\n\nbody {\n  background: white;\n  color: #333;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, \"Nimbus Sans L\", \"Liberation Sans\", Arimo, sans-serif;\n  line-height: 1.44444; }\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: normal;\n  line-height: 1.22222; }\n\na {\n  border: 0;\n  color: inherit;\n  text-decoration: none;\n  transition: color .8s ease-out; }\n  .wrap-content a,\n  .menu-inline a {\n    color: steelblue; }\n  .wrap-sidebar a {\n    color: steelblue; }\n\nfigure {\n  margin: 0; }\n\nimg {\n  height: auto;\n  max-width: 100%; }\n\n.wrap-header, .wrap-content, .wrap-sidebar, .wrap-footer {\n  box-sizing: border-box;\n  padding: 0 30px 0 30px; }\n\n.wrap-header {\n  padding-bottom: 15px;\n  padding-top: 15px; }\n  @media screen and (min-width: 800px) {\n    .wrap-header {\n      padding-left: 60px;\n      padding-right: 60px; } }\n\n@media screen and (min-width: 800px) {\n  .wrap-main {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 1000px;\n    padding: 0 60px 0 60px; } }\n\n.wrap-content {\n  padding: 30px; }\n  @media screen and (min-width: 800px) {\n    .wrap-content {\n      float: left;\n      padding-left: 0;\n      padding-right: 30px;\n      width: 68%; } }\n\n.wrap-sidebar {\n  padding: 30px; }\n  @media screen and (min-width: 800px) {\n    .wrap-sidebar {\n      float: right;\n      padding-left: 30px;\n      padding-right: 0;\n      width: 32%; } }\n\n.wrap-footer {\n  padding-bottom: 60px;\n  padding-top: 15px; }\n  @media screen and (min-width: 800px) {\n    .wrap-footer {\n      padding-left: 60px;\n      padding-right: 60px; } }\n\n.site-header,\n.site-footer {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1000px; }\n\n.site-title {\n  margin-top: 0; }\n\n.site-navigation {\n  display: none; }\n  @media screen and (min-width: 620px) {\n    .site-navigation {\n      display: block !important; } }\n  .site-navigation.active {\n    display: block; }\n\n.alignright {\n  float: right; }\n\n.alignleft {\n  float: left; }\n\n.menu-inline, .menu-inline ul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0; }\n  .menu-inline > li, .menu-inline ul > li {\n    float: left;\n    margin-right: 15px; }\n    .menu-inline > li:last-of-type, .menu-inline ul > li:last-of-type {\n      margin-right: 0; }\n\n@media screen and (min-width: 620px) {\n  #responsive-menu-toggle {\n    display: none; } }\n\n.nav-previous {\n  box-sizing: border-box;\n  float: left;\n  padding-right: 15px;\n  width: 50%; }\n\n.nav-next {\n  box-sizing: border-box;\n  float: right;\n  padding-left: 15px;\n  text-align: right;\n  width: 50%; }\n\n.widget ul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0; }\n","// ==== HELPERS ==== //\r\n\r\n%center {\r\n  @include scut-center-block;\r\n}\r\n%clearfix {\r\n  @include scut-clearfix;\r\n}\r\n%hide {\r\n  @include scut-hide-visually;\r\n}\r\n%spacer-above {\r\n  margin-top: spacer();\r\n}\r\n%spacer-above-2 {\r\n  margin-top: spacer(2);\r\n}\r\n%spacer-above-3 {\r\n  margin-top: spacer(3);\r\n}\r\n%spacer-below {\r\n  margin-bottom: spacer();\r\n}\r\n%spacer-below-2 {\r\n  margin-bottom: spacer(2);\r\n}\r\n%spacer-below-3 {\r\n  margin-bottom: spacer(3);\r\n}\r\n","/*\n* Scut, a collection of Sass utilities\n* to ease and improve our implementations of common style-code patterns.\n* v1.4.0\n* Docs at http://davidtheclark.github.io/scut\n*/\n\n@mixin scut-clearfix {\n\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n}\n\n%scut-clearfix {\n  @include scut-clearfix;\n}\n@mixin scut-list-unstyled(\n  $no-margin: true\n) {\n\n  list-style-type: none;\n  padding-left: 0;\n\n  @if $no-margin {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n}\n\n%scut-list-unstyled {\n  @include scut-list-unstyled();\n}\n// Depends on `list-unstyled` and `clearfix`.\n\n@mixin scut-list-floated (\n  $space: false,\n  $dir: left,\n  $no-margin: true\n) {\n\n  @include scut-list-unstyled($no-margin);\n  @include scut-clearfix;\n\n  & > li {\n    float: $dir;\n  }\n\n  @if $space {\n    & > li + li {\n      margin-#{$dir}: $space;\n    }\n  }\n\n}\n\n%scut-list-floated {\n  @include scut-list-floated;\n}\n\n@function scut-autoOrValue ($val) {\n  @if $val == a or $val == auto {\n    @return auto;\n  }\n  @else {\n    @return $val;\n  }\n}\n\n@mixin scut-coords (\n  $coordinates: n n n n\n) {\n\n  $top: nth($coordinates, 1);\n  $right: nth($coordinates, 2);\n  $bottom: nth($coordinates, 3);\n  $left: nth($coordinates, 4);\n\n  @if $top != n {\n    top: scut-autoOrValue($top);\n  }\n  @if $right != n {\n    right: scut-autoOrValue($right);\n  }\n  @if $bottom != n {\n    bottom: scut-autoOrValue($bottom);\n  }\n  @if $left != n {\n    left: scut-autoOrValue($left);\n  }\n\n}\n@function scut-strip-unit (\n  $num\n) {\n\n  @return $num / ($num * 0 + 1);\n\n}\n// Depends on `scut-strip-unit`.\n\n$scut-em-base: 16 !default;\n\n@function scut-em (\n  $pixels,\n  $base: $scut-em-base\n) {\n\n  // $base could be in em or px (no unit = px).\n  // Adjust accordingly to create a $divisor that\n  // serves as context for $pixels.\n  $multiplier: if(unit($base) == em, 16, 1);\n  $divisor: scut-strip-unit($base) * $multiplier;\n\n  $em-vals: ();\n  @each $val in $pixels {\n    $val-in-ems: (scut-strip-unit($val) / $divisor) * 1em;\n    $em-vals: append($em-vals, $val-in-ems);\n  }\n\n  @if length($em-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($em-vals, 1);\n  }\n  @else {\n    @return $em-vals;\n  }\n\n}\n// Depends on `scut-strip-unit`.\n\n$scut-rem-base: 16 !default;\n\n@function scut-rem (\n  $pixels\n) {\n\n  $rem-vals: ();\n  @each $val in $pixels {\n    $val-in-rems: scut-strip-unit($val) / $scut-rem-base * 1rem;\n    $rem-vals: append($rem-vals, $val-in-rems);\n  }\n\n  @if length($rem-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($rem-vals, 1);\n  }\n  @else {\n    @return $rem-vals;\n  }\n\n}\n@mixin scut-border (\n  $style,\n  $sides: n y\n) {\n\n  @if length($sides) == 2 {\n    @if nth($sides, 1) != n {\n      border-top: $style;\n      border-bottom: $style;\n    }\n    @if nth($sides, 2) != n {\n      border-left: $style;\n      border-right: $style;\n    }\n  }\n\n  @else if length($sides) == 4 {\n    @if nth($sides, 1) != n {\n      border-top: $style;\n    }\n    @if nth($sides, 2) != n {\n      border-right: $style;\n    }\n    @if nth($sides, 3) != n {\n      border-bottom: $style;\n    }\n    @if nth($sides, 4) != n {\n      border-left: $style;\n    }\n  }\n\n  @else {\n    @warn \"Scut-border requires a $sides argument of 2 or 4 values.\"\n  }\n\n}\n@mixin scut-circle (\n  $size,\n  $color: inherit\n) {\n\n  border-radius: 50%;\n  display: inline-block;\n\n  @if $color == inherit {\n    // If user wants to inherit the color,\n    // take advantage of the fact that border\n    // color defaults to the text color of the element.\n    border-width: $size / 2;\n    border-style: solid;\n    height: 0;\n    width: 0;\n  }\n  @else {\n    // Otherwise, just use background-color.\n    background-color: $color;\n    height: $size;\n    width: $size;\n  }\n\n}\n@mixin scut-color-swap (\n  $off,\n  $on,\n  $duration: 0,\n  $bg: false\n) {\n\n  $transition-properties: null;\n  $off-is-list: type-of($off) == list;\n  $on-is-list: type-of($on) == list;\n\n  // If $off IS a list,\n  // assign color and background-color.\n  @if $off-is-list {\n    color: nth($off, 1);\n    background-color: nth($off, 2);\n    $transition-properties: background-color, color;\n  }\n\n  // If $off IS NOT a list and $bg is TRUE,\n  // assign background-color.\n  @else if $bg and not($off-is-list) {\n    background-color: $off;\n    $transition-properties: background-color;\n  }\n\n  // If $off IS NOT a list and $bg is FALSE,\n  // assign color.\n  @else {\n    color: $off;\n    $transition-properties: color;\n  }\n\n  // Only set-up transition if $duration != 0.\n  @if $duration != 0 {\n    transition-property: $transition-properties;\n    transition-duration: $duration;\n  }\n\n  &:hover,\n  &:focus {\n\n    // $on is treated the same as $off, above.\n    @if $on-is-list {\n      color: nth($on, 1);\n      background-color: nth($on, 2);\n    }\n\n    @else if $bg and not($on-is-list) {\n      background-color: $on;\n    }\n\n    @else {\n      color: $on;\n    }\n  }\n\n}\n@mixin scut-hd-bp (\n  $ratio: 1.3\n) {\n\n  @media (-o-min-device-pixel-ratio: ($ratio / 1)),\n         (-webkit-min-device-pixel-ratio: $ratio),\n         (min-resolution: (round(96 * $ratio) * 1dpi)) {\n    @content;\n  }\n\n}\n\n@mixin scut-hide-visually {\n\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n\n}\n\n%scut-hide-visually {\n  @include scut-hide-visually;\n}\n@mixin scut-image-replace {\n\n  text-indent: 102%;\n  white-space: nowrap;\n  overflow: hidden;\n  padding: 0;\n\n}\n\n%scut-image-replace {\n  @include scut-image-replace;\n}\n\n// Depends on scut-rem and scut-strip-unit\n\n@mixin scut-rem-fallback (\n  $pixels,\n  $property: font-size\n) {\n\n  $px-vals: null;\n  @each $val in $pixels {\n    $val-in-px: scut-strip-unit($val) * 1px;\n    $px-vals: append($px-vals, $val-in-px);\n  }\n  $rem-vals: scut-rem($pixels);\n\n  #{$property}: $px-vals;\n  #{$property}: $rem-vals;\n\n}\n@mixin scut-reset-border-box {\n  // Make everything a border-box, because why not?\n  html {\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n}\n\n@mixin scut-reset-antialias {\n  // Antialias!\n  body {\n    -webkit-font-smoothing: antialiased;\n  }\n  *, *:before, *:after {\n    -webkit-font-smoothing: inherit;\n  }\n}\n\n@mixin scut-reset-semanticize {\n  // Make headers and <b> semantic, not presentational.\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-size: 1em;\n    font-weight: normal;\n    margin: 0;\n  }\n  b {\n    font-weight: normal;\n  }\n}\n\n@mixin scut-reset-pointer {\n  // Clickable form elements should have a pointer.\n  label,\n  select,\n  option,\n  button {\n    cursor: pointer;\n  }\n}\n\n@mixin scut-reset-form {\n  fieldset {\n    border: 0;\n    margin: 0;\n    padding: 0;\n  }\n  textarea {\n    resize: vertical;\n  }\n}\n\n@mixin scut-reset-button {\n  // Reset default button styles, which are never used.\n  button,\n  [type=\"button\"],\n  [type=\"submit\"],\n  [type=\"reset\"] {\n    background: transparent;\n    border: 0;\n    color: inherit;\n    font: inherit;\n    margin: 0;\n    padding: 0;\n    width: auto;\n    -webkit-appearance: none;\n    -webkit-font-smoothing: antialiased;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    &::-moz-focus-inner {\n      padding: 0;\n      border: 0;\n    }\n  }\n}\n\n@mixin scut-reset-paragraph {\n  // Some paragraph margins just get in the way.\n  p:first-of-type {\n    margin-top: 0;\n  }\n  p:last-of-type {\n    margin-bottom: 0;\n  }\n}\n\n@mixin scut-reset-media {\n  // You want these elements fluid, probably.\n  img,\n  video {\n    max-width: 100%;\n    height: auto;\n  }\n}\n\n@mixin scut-reset-figure {\n  // Remove default margins.\n  figure {\n    margin: 0;\n  }\n}\n\n// Call them all, minus exclusions!\n@mixin scut-reset ($exclude: false) {\n  @if not(index($exclude, border-box)) {\n    @include scut-reset-border-box;\n  }\n  @if not(index($exclude, antialias)) {\n    @include scut-reset-antialias;\n  }\n  @if not(index($exclude, semanticize)) {\n    @include scut-reset-semanticize;\n  }\n  @if not(index($exclude, pointer)) {\n    @include scut-reset-pointer;\n  }\n  @if not(index($exclude, form)) {\n    @include scut-reset-form;\n  }\n  @if not(index($exclude, button)) {\n    @include scut-reset-button;\n  }\n  @if not(index($exclude, paragraph)) {\n    @include scut-reset-paragraph;\n  }\n  @if not(index($exclude, media)) {\n    @include scut-reset-media;\n  }\n  @if not(index($exclude, figure)) {\n    @include scut-reset-figure;\n  }\n}\n\n@mixin scut-selected (\n  $active: false\n) {\n\n  @if $active {\n    &:hover,\n    &:focus,\n    &:active {\n      @content;\n    }\n  }\n  @else {\n    &:hover,\n    &:focus {\n      @content;\n    }\n  }\n\n}\n@mixin scut-triangle (\n  $direction: right,\n  $size: 0.75em,\n  $color: inherit\n) {\n\n  display: inline-block;\n  height: 0;\n  width: 0;\n  // For improved appearance in some Webkit browsers\n  -webkit-transform: rotate(360deg);\n\n  // Set up some variables\n  $width: null;\n  $height: null;\n  $border-widths: null;\n\n  @if type-of($size) == list {\n    $width: nth($size, 1);\n    $height: nth($size, 2);\n  }\n  @else {\n    $width: $size;\n    $height: $size;\n  }\n\n  @if ($direction == up) or ($direction == down) {\n    // For up and down, width gets two borders but height only one,\n    // so divide second border-width value by 2\n    $border-widths: $height ($width / 2);\n  }\n  @else if ($direction == right) or ($direction == left) {\n    // For right and left, height gets two borders but width only one,\n    // so divide first border-width value by 2\n    $border-widths: ($height / 2) $width;\n  }\n  @else {\n    // For right triangles (the rest), both sides get two borders,\n    // so divide both by 2\n    $border-widths: ($height / 2) ($width / 2);\n  }\n\n  border-width: $border-widths;\n  border-style: solid;\n\n\n  // STANDARD TRIANGLES\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    border-color: transparent;\n    @if $direction == up {\n      border-bottom-color: $color;\n      border-top-width: 0;\n    }\n    @else if $direction == right {\n      border-left-color: $color;\n      border-right-width: 0;\n    }\n    @else if $direction == down {\n      border-top-color: $color;\n      border-bottom-width: 0;\n    }\n    @else if $direction == left {\n      border-right-color: $color;\n      border-left-width: 0;\n    }\n  }\n\n\n  // CORNER TRIANGLES\n\n  @else if ($direction == top-right) or ($direction == top-left) {\n    border-top-color: $color;\n    border-bottom-color: transparent;\n    @if $direction == top-right {\n      border-left-color: transparent;\n      border-right-color: $color;\n    }\n    @else if $direction == top-left {\n      border-left-color: $color;\n      border-right-color: transparent;\n    }\n  }\n\n  @else if ($direction == bottom-right) or ($direction == bottom-left) {\n    border-top-color: transparent;\n    border-bottom-color: $color;\n    @if $direction == bottom-right {\n      border-left-color: transparent;\n      border-right-color: $color;\n    }\n    @else if $direction == bottom-left {\n      border-left-color: $color;\n      border-right-color: transparent;\n    }\n  }\n\n}\n\n%scut-triangle {\n  @include scut-triangle;\n}\n@mixin scut-center-absolutely (\n  $dimensions\n) {\n\n  $width: nth($dimensions, 1);\n  $height: nth($dimensions, 2);\n\n  position: absolute;\n\n  @if $width != n {\n    width: $width;\n    left: 50%;\n    margin-left: (-$width / 2);\n  }\n\n  @if $height != n {\n    height: $height;\n    top: 50%;\n    margin-top: (-$height / 2);\n  }\n\n}\n@mixin scut-center-block (\n  $max-width: false\n) {\n\n  margin-left: auto;\n  margin-right: auto;\n  @if $max-width {\n    max-width: $max-width;\n  }\n\n}\n\n%scut-center-block {\n  @include scut-center-block;\n}\n\n@mixin scut-center-transform (\n  $axis: false // or x or y\n) {\n\n  position: absolute;\n\n  @if $axis != x {\n    top: 50%;\n    margin-top: auto;\n    margin-bottom: auto;\n  }\n\n  @if $axis != y {\n    left: 50%;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  $translate-val: null;\n\n  @if not($axis) {\n    $translate-val: translate(-50%, -50%);\n  }\n  @else if $axis != x {\n    $translate-val: translateY(-50%);\n  }\n  @else if $axis != y {\n    $translate-val: translateX(-50%);\n  }\n\n  -webkit-transform: $translate-val;\n  -ms-transform: $translate-val;\n  transform: $translate-val;\n}\n\n%scut-center-transform {\n  @include scut-center-transform;\n}\n\n%scut-center-transform-x {\n  @include scut-center-transform(x);\n}\n\n%scut-center-transform-y {\n  @include scut-center-transform(y);\n}\n\n@mixin scut-fill (\n  $width-height: false\n) {\n\n  position: absolute;\n  left: 0;\n  top: 0;\n  @if $width-height {\n    width: 100%;\n    height: 100%;\n  }\n  @else {\n    right: 0;\n    bottom: 0;\n  }\n\n}\n\n%scut-fill {\n  @include scut-fill;\n}\n@mixin scut-list-custom (\n  $content: \"\\2022\",\n  $marker-width: 0.75em,\n  $pad: 0,\n  $no-margin: false\n) {\n\n  $content-val: null;\n  $counter: index($content, count);\n  @if $counter {\n    @if length($content) == 3 {\n      $content-val: counter(scutlistcounter, nth($content, 3))nth($content,2);\n    }\n    @else if length($content) == 2 {\n      $content-val: counter(scutlistcounter)nth($content,2);\n    }\n    @else {\n      $content-val: counter(scutlistcounter);\n    }\n  }\n  @else {\n    $content-val: $content;\n  }\n\n  padding-left: $marker-width + $pad;\n  list-style-type: none;\n\n  @if $no-margin {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  & > li {\n    position: relative;\n    @if $counter {\n      counter-increment: scutlistcounter;\n    }\n    &:before {\n      content: $content-val;\n      display: block;\n      position: absolute;\n      top: 0;\n      left: -$marker-width;\n      width: $marker-width;\n      @content;\n    }\n  }\n\n}\n// Depends on `list-floated`, which depends in turn on `list-unstyled` and `clearfix`.\n\n@mixin scut-list-divided (\n  $divider: \"|\",\n  $space: 0.5em,\n  $dir: left,\n  $height: false,\n  $no-margin: true\n) {\n\n  @include scut-list-floated($dir: $dir, $no-margin: $no-margin);\n\n  $pseudo: if($dir == left, 'before', 'after');\n\n  // If an explicit height is passed,\n  // things are different: All <li>s\n  // need the pseudo-element (to force height),\n  // but the first's must be hidden.\n\n  @if $height {\n    & > li {\n      height: $height;\n    }\n    & > li:#{$pseudo} {\n      height: $height;\n      content: $divider;\n      display: inline-block;\n      vertical-align: middle;\n      @content;\n    }\n    & > li:first-child:#{$pseudo} {\n      width: 0;\n      overflow: hidden;\n    }\n  }\n\n  & > li + li:#{$pseudo} {\n    @if not($height) {\n      content: $divider;\n      display: inline-block;\n      @content;\n    }\n    margin-left: $space;\n    margin-right: $space;\n  }\n\n}\n\n%scut-list-bar {\n  @include scut-list-divided;\n}\n\n%scut-list-breadcrumb {\n  @include scut-list-divided(\"/\");\n}\n// Depends on `list-unstyled`.\n\n@mixin scut-list-inline (\n  $space: false,\n  $no-margin: true\n) {\n\n  @include scut-list-unstyled($no-margin);\n\n  & > li {\n    display: inline-block;\n  }\n\n  @if $space {\n    & > li + li {\n      margin-left: $space;\n    }\n  }\n\n}\n\n%scut-list-inline {\n  @include scut-list-inline;\n}\n// Depends on `list-unstyled`.\n\n@mixin scut-list-punctuated (\n  $divider: \", \",\n  $display: inline,\n  $no-margin: true\n) {\n\n  @include scut-list-unstyled($no-margin);\n\n  & > li {\n    display: $display;\n    &:not(:last-child):after {\n      content: $divider;\n    }\n  }\n\n}\n\n%scut-list-comma {\n  @include scut-list-punctuated;\n}\n@mixin scut-margin (\n  $margin\n) {\n\n  @if length($margin) == 1 and $margin != n {\n    margin-top: $margin;\n    margin-right: $margin;\n    margin-bottom: $margin;\n    margin-left: $margin;\n  }\n\n  @if length($margin) == 2 {\n    $margin-y: nth($margin, 1);\n    $margin-x: nth($margin, 2);\n    @if $margin-y != n {\n      margin-top: $margin-y;\n      margin-bottom: $margin-y;\n    }\n    @if $margin-x != n {\n      margin-left: $margin-x;\n      margin-right: $margin-x;\n    }\n  }\n\n  @if length($margin) == 3 {\n    $margin-y-top: nth($margin, 1);\n    $margin-x: nth($margin, 2);\n    $margin-y-bottom: nth($margin, 3);\n    @if $margin-y-top != n {\n      margin-top: $margin-y-top;\n    }\n    @if $margin-x != n {\n      margin-right: $margin-x;\n      margin-left: $margin-x;\n    }\n    @if $margin-y-bottom != n {\n      margin-bottom: $margin-y-bottom;\n    }\n  }\n\n  @if length($margin) == 4 {\n    $margin-top: nth($margin, 1);\n    $margin-right: nth($margin, 2);\n    $margin-bottom: nth($margin, 3);\n    $margin-left: nth($margin, 4);\n    @if $margin-top != n {\n      margin-top: $margin-top;\n    }\n    @if $margin-right != n {\n      margin-right: $margin-right;\n    }\n    @if $margin-bottom != n {\n      margin-bottom: $margin-bottom;\n    }\n    @if $margin-left != n {\n      margin-left: $margin-left;\n    }\n  }\n\n}\n@mixin scut-padding (\n  $padding\n) {\n\n  @if length($padding) == 1 and $padding != n {\n    padding-top: $padding;\n    padding-right: $padding;\n    padding-bottom: $padding;\n    padding-left: $padding;\n  }\n\n  @if length($padding) == 2 {\n    $padding-y: nth($padding, 1);\n    $padding-x: nth($padding, 2);\n    @if $padding-y != n {\n      padding-top: $padding-y;\n      padding-bottom: $padding-y;\n    }\n    @if $padding-x != n {\n      padding-left: $padding-x;\n      padding-right: $padding-x;\n    }\n  }\n\n  @if length($padding) == 3 {\n    $padding-y-top: nth($padding, 1);\n    $padding-x: nth($padding, 2);\n    $padding-y-bottom: nth($padding, 3);\n    @if $padding-y-top != n {\n      padding-top: $padding-y-top;\n    }\n    @if $padding-x != n {\n      padding-right: $padding-x;\n      padding-left: $padding-x;\n    }\n    @if $padding-y-bottom != n {\n      padding-bottom: $padding-y-bottom;\n    }\n  }\n\n  @if length($padding) == 4 {\n    $padding-top: nth($padding, 1);\n    $padding-right: nth($padding, 2);\n    $padding-bottom: nth($padding, 3);\n    $padding-left: nth($padding, 4);\n    @if $padding-top != n {\n      padding-top: $padding-top;\n    }\n    @if $padding-right != n {\n      padding-right: $padding-right;\n    }\n    @if $padding-bottom != n {\n      padding-bottom: $padding-bottom;\n    }\n    @if $padding-left != n {\n      padding-left: $padding-left;\n    }\n  }\n}\n// Depends on `positioning-coordinates`.\n\n@mixin scut-absolute (\n  $coordinates: 0 n n 0\n) {\n\n  position: absolute;\n  @include scut-coords($coordinates);\n\n}\n\n%scut-absolute {\n  @include scut-absolute;\n}\n// Depends on `positioning-coordinates`.\n\n@mixin scut-fixed (\n  $coordinates: 0 n n 0\n) {\n\n  position: fixed;\n  @include scut-coords($coordinates);\n\n}\n\n%scut-fixed {\n  @include scut-fixed;\n}\n// Depends on `positioning-coordinates`.\n\n@mixin scut-relative (\n  $coordinates: n n n n\n) {\n\n  position: relative;\n  @include scut-coords($coordinates);\n\n}\n@mixin scut-ratio-box (\n  $ratio: 1/1\n) {\n\n  overflow: hidden;\n  position: relative;\n\n  // The container's height, as a percentage of the\n  // container's width, is set by assigning\n  // padding-top to a pseudo-element.\n  &:before {\n    content: \"\";\n    display: block;\n    height: 0;\n    padding-top: (1 / $ratio) * 100%;\n  }\n\n}\n\n%scut-ratio-box {\n  @include scut-ratio-box;\n}\n@mixin scut-size(\n  $size\n) {\n\n  @if length($size) == 1 {\n    width:  $size;\n    height: $size;\n  }\n  @else if length($size) == 2 {\n    width:  nth($size, 1);\n    height: nth($size, 2);\n  }\n\n}\n@mixin scut-sticky-footer-fixed (\n  $height,\n  $wrapper: \".wrapper\",\n  $footer: \".scut-sticky\"\n) {\n\n  html,\n  body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  #{$wrapper} {\n    min-height: 100%;\n    margin-bottom: -$height;\n    &:after {\n      content: \"\";\n      display: block;\n    }\n  }\n\n  #{$wrapper}:after,\n  #{$footer} {\n    height: $height;\n  }\n\n}\n\n// deprecated\n@mixin scut-sticky-footer (\n  $height,\n  $wrapper: \".wrapper\",\n  $footer: \".scut-sticky\"\n){\n  @include scut-sticky-footer-fixed($height, $wrapper, $footer);\n}\n@mixin scut-sticky-footer-fluid (\n  $wrapper: \".wrapper\",\n  $footer: \".scut-sticky\"\n) {\n\n  html,\n  body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  #{$wrapper} {\n    display: table;\n    height: 100%;\n    width: 100%;\n  }\n\n  #{$footer} {\n    display: table-row;\n    height: 1px;\n  }\n\n}\n@mixin scut-vcenter-ib (\n  $inner...\n) {\n\n  // The inner element is vertically centered\n  // by middle-aligning it with an inline pseudo-element\n  // whose height is 100%.\n\n  &:before {\n    content: \"\";\n    height: 100%;\n    display: inline-block;\n    vertical-align: middle;\n    // A small negative right margin is set\n    // to account for the default\n    // word-spacing of inline-block.\n    margin-right: -0.25em;\n  }\n\n  $inner: if(length($inner) == 0, \".scut-inner\", $inner);\n  @each $cell-selector in $inner {\n    $cell-selector: unquote($cell-selector);\n    & > #{$cell-selector} {\n      display: inline-block;\n      vertical-align: middle;\n    }\n  }\n\n}\n\n%scut-vcenter-ib {\n  @include scut-vcenter-ib;\n}\n\n@mixin scut-vcenter-lh (\n  $height\n) {\n\n  height: $height;\n  line-height: $height;\n\n}\n@mixin scut-vcenter-td (\n  $inner...\n) {\n\n  display: table;\n\n  $inner: if(length($inner) == 0, \".scut-inner\", $inner);\n  @each $cell-selector in $inner {\n    $cell-selector: unquote($cell-selector);\n    & > #{$cell-selector} {\n      display: table-cell;\n      vertical-align: middle;\n    }\n  }\n\n}\n\n\n%scut-vcenter-td {\n  @include scut-vcenter-td;\n}\n\n// Depends on scut-center-transform\n\n@mixin scut-vcenter-tt () {\n  @include scut-center-transform(y);\n}\n\n%scut-vcenter-tt {\n  @include scut-vcenter-tt;\n}\n// space\n$scut-space: \"\\0020\";\n// non-breaking space\n$scut-nbsp: \"\\00a0\";\n\n// quotation mark\n$scut-quot: \"\\0022\";\n// left single curly quote\n$scut-lsquo: \"\\2018\";\n// right single curly quote\n$scut-rsquo: \"\\2019\";\n// left double curly quote\n$scut-ldquo: \"\\201C\";\n// right double curly quote\n$scut-rdquo: \"\\201D\";\n// left single angle quote (guillemet)\n$scut-lsaquo: \"\\2039\";\n// right single angle quote (guillemet)\n$scut-rsaquo: \"\\203A\";\n// left double angle quote (guillemet)\n$scut-laquo: \"\\00ab\";\n// right double angle quote (guillemet)\n$scut-raquo: \"\\00bb\";\n\n// em dash (mutton)\n$scut-mdash: \"\\2014\";\n// en dash (nut)\n$scut-ndash: \"\\2013\";\n// hyphen\n$scut-hyphen: \"\\2010\";\n\n// ampersand\n$scut-amp: \"\\0026\";\n// greater than\n$scut-gt: \"\\003e\";\n// less than\n$scut-lt: \"\\003c\";\n// times\n$scut-times: \"\\00D7\";\n// big times\n$scut-bigtimes: \"\\2715\";\n// checkmark\n$scut-checkmark: \"\\2713\";\n\n// section sign (double S, hurricane, sectional symbol, the legal doughnut, signum sectionis)\n$scut-sect: \"\\00a7\";\n// paragraph symbol (pilcrow)\n$scut-para: \"\\00b6\";\n\n// middot (interpunct, interpoint)\n$scut-middot: \"\\00b7\";\n// o-slash (slashed o)\n$scut-oslash: \"\\00f8\";\n// bullet\n$scut-bull: \"\\2022\";\n// white bullet\n$scut-whibull: \"\\25E6\";\n// horizontal ellipsis\n$scut-hellip: \"\\2026\";\n// vertical ellipsis\n$scut-vellip: \"\\22EE\";\n// midline horizontal ellipsis\n$scut-midhellip: \"\\22EF\";\n\n// up-pointing triangle\n$scut-utri: \"\\25b2\";\n// down-pointing triangle\n$scut-dtri: \"\\25bc\";\n// left-pointing triangle\n$scut-ltri: \"\\25c0\";\n// right-pointing triangle\n$scut-rtri: \"\\25b6\";\n// up-pointing small triangle\n$scut-ustri: \"\\25b4\";\n// down-pointing small triangle\n$scut-dstri: \"\\25be\";\n// left-pointing small triangle\n$scut-lstri: \"\\25c2\";\n// right-pointing small triangle\n$scut-rstri: \"\\25b8\";\n// diamond\n$scut-diamond: \"\\25c6\";\n// fisheye\n$scut-fisheye: \"\\25c9\";\n// bullseye\n$scut-bullseye: \"\\25ce\";\n// circle\n$scut-circle: \"\\25cf\";\n// white circle\n$scut-whitecircle: \"\\25cb\";\n// square\n$scut-square: \"\\25a0\";\n// white square\n$scut-whitesquare: \"\\25a1\";\n// small square\n$scut-ssquare: \"\\25aa\";\n// small white square\n$scut-swhitesquare: \"\\25ab\";\n\n// general currency\n$scut-currency: \"\\00a4\";\n// cent\n$scut-cent: \"\\00a2\";\n// dollar\n$scut-dollar: \"\\0024\";\n// pound\n$scut-pound: \"\\00a3\";\n// euro\n$scut-euro: \"\\20ac\";\n// yen\n$scut-yen: \"\\00a5\";\n// rupee\n$scut-rupee: \"\\20B9\";\n@function main-src($formats, $file-path, $font-family) {\n  // Return the list of `src` values, in order, that\n  // a good `@font-face` will need, including only\n  // those formats specified in the list `$formats`.\n  $result: ();\n  @if index($formats, eot) {\n    $eot-val: url('#{$file-path}.eot?#iefix') format('embedded-opentype');\n    $result: append($result, $eot-val, comma);\n  }\n  @if index($formats, woff2) {\n    $woff2-val: url('#{$file-path}.woff2') format('woff2');\n    $result: append($result, $woff2-val, comma);\n  }\n  @if index($formats, woff) {\n    $woff-val: url('#{$file-path}.woff') format('woff');\n    $result: append($result, $woff-val, comma);\n  }\n  @if index($formats, ttf) {\n    $ttf-val: url('#{$file-path}.ttf') format('truetype');\n    $result: append($result, $ttf-val, comma);\n  }\n  @if index($formats, svg) {\n    $svg-val: url('#{$file-path}.svg##{$font-family}') format('svg');\n    $result: append($result, $svg-val, comma);\n  }\n  @return $result;\n}\n\n@mixin scut-font-face (\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $formats: eot woff2 woff ttf svg\n) {\n\n  @if index('italic' 'oblique', $weight) {\n    $style: $weight;\n    $weight: normal;\n  }\n\n  @font-face {\n    font-family: $font-family;\n    font-weight: $weight;\n    font-style: $style;\n\n    @if index($formats, eot) {\n      src: url('#{$file-path}.eot');\n    }\n    src: main-src($formats, $file-path, $font-family);\n  }\n\n}\n\n@mixin scut-hanging-indent (\n  $indent: 1em\n) {\n\n  // padding-left creates the indent,\n  // while text-indent pulls the first line\n  // back to the edge.\n\n  padding-left: $indent;\n  text-indent: -$indent;\n\n}\n\n%scut-hanging-indent {\n  @include scut-hanging-indent;\n}\n@mixin scut-indented-ps (\n  $indent: 1.5em,\n  $no-first-indent: true\n) {\n\n  p {\n    margin: 0;\n    text-indent: $indent;\n  }\n\n  @if $no-first-indent {\n    p:first-of-type {\n      text-indent: 0;\n    }\n  }\n\n}\n\n%scut-indented-ps {\n  @include scut-indented-ps;\n}\n@mixin scut-key-val (\n  $divider: \":\",\n  $pad: 0.25em,\n  $indent: 1em,\n  $spacing: 0,\n  $pad-left: 0\n) {\n\n  & > dt {\n    clear: both;\n    float: left;\n    &:after {\n      content: $divider;\n      margin-right: $pad;\n      @if $pad-left != 0 {\n        margin-left: $pad-left;\n      }\n    }\n  }\n\n  & > dd {\n    margin-left: $indent;\n    @if $spacing != 0 {\n      margin-bottom: $spacing;\n    }\n  }\n\n}\n\n%scut-key-val {\n  @include scut-key-val;\n}\n@mixin scut-link-bb (\n  $color: inherit,\n  $style: solid,\n  $width: 1px\n) {\n\n  text-decoration: none;\n\n  border-bottom-width: $width;\n  border-bottom-style: $style;\n  @if $color != inherit {\n    border-bottom-color: $color;\n  }\n\n}\n\n%scut-link-bb {\n  @include scut-link-bb;\n}\n// SCUT LINK UNSTYLED\n// http://davidtheclark.github.io/scut/#link-unstyled\n\n@mixin scut-link-unstyled() {\n\n  text-decoration: none;\n  color: inherit;\n\n}\n\n%scut-link-unstyled {\n  @include scut-link-unstyled();\n}\n\n@mixin scut-reverse-italics (\n  $elements: null\n) {\n\n  $element-list: em, cite, i;\n  font-style: italic;\n  #{join($element-list, $elements)} {\n    font-style: normal;\n  }\n\n}\n\n%scut-reverse-italics {\n  @include scut-reverse-italics;\n}\n\n@mixin scut-side-lined (\n  $height: 1px,\n  $space: 0.5em,\n  $color: inherit,\n  $style: solid,\n  $v-adjust: false,\n  $double: false\n) {\n\n  display: block;\n  overflow: hidden;\n  text-align: center;\n\n  &:before,\n  &:after {\n    content: \"\";\n    display: inline-block;\n    vertical-align: middle;\n    position: relative;\n    width: 50%;\n\n    border-top-style: $style;\n    border-top-width: $height;\n\n    @if $color != inherit {\n      border-top-color: $color;\n    }\n\n    @if $v-adjust != false {\n      bottom: $v-adjust;\n    }\n\n    @if $double != false {\n      height: $double;\n      border-bottom-style: $style;\n      border-bottom-width: $height;\n      @if $color != inherit {\n        border-bottom-color: $color;\n      }\n    }\n  }\n\n  &:before {\n    right: $space;\n    margin-left: -50%;\n  }\n  &:after {\n    left: $space;\n    margin-right: -50%;\n  }\n\n}\n\n%scut-side-lined {\n  @include scut-side-lined;\n}\n@mixin scut-truncate {\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n}\n\n%scut-truncate {\n  @include scut-truncate;\n}","// ==== LIBRARY ==== //\r\n\r\n// Mixins, functions, and other non-declarative things\r\n\r\n// == MEDIA QUERIES == //\r\n\r\n// Master media query mixin; only for use with screens, of course; should work with raw integers or pixel values; adapted from Kipple: https://github.com/synapticism/kipple\r\n@mixin media($min-query: null, $max-query: null) {\r\n  @if $min-query == null and $max-query == null {\r\n    @warn \"Mixin k-media() received two null values; no output.\";\r\n    @content; // Pass content anyway, but it won't be wrapped in a media query\r\n  }\r\n  @else if $max-query == null {\r\n    @media screen and (min-width: $min-query+0px) { @content; }\r\n  }\r\n  @else if $min-query == null {\r\n    @media screen and (max-width: $max-query+0px) { @content; }\r\n  }\r\n  @else {\r\n    @media screen and (min-width: $min-query+0px) and (max-width: $max-query+0px) { @content; }\r\n  }\r\n}\r\n@mixin media-above($min-query) {\r\n  @include media($min-query, null) { @content; }\r\n}\r\n@mixin media-below($max-query) {\r\n  @include media(null, $max-query - 1) { @content; }\r\n}\r\n@mixin media-between($min-query: null, $max-query: null) {\r\n  @if $min-query == null or $max-query == null {\r\n    @warn \"Mixin media-between() received a null value.\"\r\n  }\r\n  @include media($min-query, $max-query - 1) { @content; }\r\n}\r\n\r\n\r\n\r\n// == LAYOUT == //\r\n\r\n// Margins and positioning helper function\r\n@function spacer($val: 1) {\r\n  @return $spacer * $val + 0px;\r\n}\r\n\r\n\r\n\r\n// == SETTINGS == //\r\n\r\n// Master config function\r\n@function config($map, $key) {\r\n  @return map-get($map, $key);\r\n}\r\n\r\n// A simple function to retrieve a color from the array; adapted from http://erskinedesign.com/blog/friendlier-colour-names-sass-maps/\r\n@function color($request) {\r\n  @return config($_color, $request);\r\n}\r\n\r\n// Same thing for theme metadata\r\n@function metadata($request) {\r\n  @return config($_metadata, $request);\r\n}\r\n","// ==== GENERAL ==== //\r\n\r\nhtml {\r\n  font-size: 18px;\r\n}\r\nbody {\r\n  background: color(body-background);\r\n  color: color(text);\r\n  font-family: \"Helvetica Neue\", Helvetica, Arial, \"Nimbus Sans L\", \"Liberation Sans\", Arimo, sans-serif;\r\n  line-height: 1.44444;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  font-weight: normal;\r\n  line-height: 1.22222;\r\n}\r\na {\r\n  border: 0;\r\n  color: inherit;\r\n  text-decoration: none;\r\n  transition: color .8s ease-out;\r\n  .wrap-content &,\r\n  .menu-inline & {\r\n    color: color(link);\r\n  }\r\n  .wrap-sidebar & {\r\n    color: color(link-muted);\r\n  }\r\n}\r\nfigure {\r\n  margin: 0;\r\n}\r\nimg {\r\n  height: auto;\r\n  max-width: 100%;\r\n}\r\n","// ==== CONFIGURATION ==== //\r\n\r\n// Set all your configuration variables here!\r\n\r\n// Width of the overall site as well as the left and right content columns\r\n$width-site:    1000px;\r\n$width-left:    650px;\r\n$width-right:   350px;\r\n\r\n// Breakpoints\r\n$break-small:   480px;\r\n$break-medium:  620px;\r\n$break-large:   800px;\r\n\r\n// A standard margin\r\n$spacer:        30px;\r\n\r\n// A modest palette; see `_library.scss` for the color() function\r\n$_color: (\r\n  text: #333,\r\n  link: steelblue,\r\n  link-muted: steelblue,\r\n  body-background: white\r\n);\r\n\r\n// Metadata; use metadata() to access\r\n$_metadata: (\r\n  theme-name:               \"Wanchope\"\r\n, theme-uri:                \"https://github.com/dmmarmol/wanchope\"\r\n, theme-author:             \"Diego Martin Marmol\"\r\n, theme-author-uri:         \"http://synapticism.com\"\r\n, theme-description:        \"Personal blog theme based in [this](https://github.com/synapticism/wordpress-gulp-starter-kit) starter kit\"\r\n, theme-version:            \"0.0.1\"\r\n, theme-license:            \"GPLv3\"\r\n, theme-license-uri:        \"http://www.gnu.org/licenses/gpl.txt\"\r\n, theme-tags:               (light, responsive-layout, right-sidebar, starter-theme, two-columns, translation-ready, white)\r\n, theme-text-domain:        \"wanchope\"\r\n, theme-text-domain-path:   \"/languages/\"\r\n);\r\n","// ==== LAYOUT ==== //\r\n\r\n// These wrappers allow for backgrounds and layout options to be defined for each of the four sections (header, content, sidebar, and footer)\r\n// There is also a fifth meta-wrapper to bind content and sidebar on large screens\r\n\r\n// A general wrapper for various site elements\r\n%wrap {\r\n  box-sizing: border-box; // Makes life a little easier\r\n  padding: 0 spacer() 0 spacer();\r\n}\r\n.wrap-header {\r\n  @extend %wrap;\r\n  background: color(header-background);\r\n  padding-bottom: spacer(1/2);\r\n  padding-top: spacer(1/2);\r\n  @include media-above($break-large) {\r\n    padding-left: spacer(2);\r\n    padding-right: spacer(2);\r\n  }\r\n}\r\n.wrap-main { // Wrapper around content and sidebar\r\n  @extend %clearfix;\r\n  @include media-above($break-large) {\r\n    @include scut-center-block($width-site);\r\n    padding: 0 spacer(2) 0 spacer(2);\r\n  }\r\n}\r\n.wrap-content {\r\n  @extend %wrap;\r\n  padding: spacer();\r\n  @include media-above($break-large) {\r\n    float: left;\r\n    padding-left: 0;\r\n    padding-right: spacer();\r\n    width: percentage( ( $width-left + spacer() ) / $width-site );\r\n  }\r\n}\r\n.wrap-sidebar {\r\n  @extend %wrap;\r\n  padding: spacer();\r\n  @include media-above($break-large) {\r\n    float: right;\r\n    padding-left: spacer();\r\n    padding-right: 0;\r\n    width: percentage( 1 - ( ( $width-left + spacer() ) / $width-site ) );\r\n  }\r\n}\r\n.wrap-footer {\r\n  @extend %wrap;\r\n  background: color(header-background);\r\n  padding-bottom: spacer(2);\r\n  padding-top: spacer(1/2);\r\n  @include media-above($break-large) {\r\n    padding-left: spacer(2);\r\n    padding-right: spacer(2);\r\n  }\r\n}\r\n.site-header,\r\n.site-footer {\r\n  @include scut-center-block($width-site);\r\n}\r\n.site-title {\r\n  margin-top: 0;\r\n}\r\n.site-description {\r\n  @extend %hide;\r\n}\r\n.site-content {\r\n  @extend %spacer-below;\r\n  article {\r\n    @extend %spacer-below-2;\r\n  }\r\n}\r\n.site-navigation {\r\n  display: none;\r\n  @include media-above($break-medium) {\r\n    display: block !important; // Handles an edge case where user resizes after menu is hidden on smaller screens\r\n  }\r\n  &.active {\r\n    display: block;\r\n  }\r\n}\r\n.alignright {\r\n  float: right;\r\n}\r\n.alignleft {\r\n  float: left;\r\n}\r\n","// ==== MENUS ==== //\r\n\r\n// Inline menu; used in header and footer navigation\r\n.menu-inline {\r\n  @extend %clearfix;\r\n  &, ul {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    & > li {\r\n      float: left;\r\n      margin-right: spacer(1/2);\r\n      &:last-of-type {\r\n        margin-right: 0;\r\n      }\r\n    }\r\n    > li > ul {\r\n      @extend %hide; // Hide submenus for the sake of simplicity; obviously you'd want to remove this when you apply your own styling\r\n    }\r\n  }\r\n}\r\n\r\n// Menu toggle for mobile phones and small screens\r\n#responsive-menu-toggle {\r\n  @include media-above($break-medium) {\r\n    display: none;\r\n  }\r\n}\r\n","// ==== NAVIGATION ==== //\r\n\r\n.nav-posts {\r\n  @extend %clearfix;\r\n  @extend %spacer-below-3;\r\n}\r\n.nav-previous {\r\n  box-sizing: border-box;\r\n  float: left;\r\n  padding-right: spacer(1/2);\r\n  width: 50%;\r\n}\r\n.nav-next {\r\n  box-sizing: border-box;\r\n  float: right;\r\n  padding-left: spacer(1/2);\r\n  text-align: right;\r\n  width: 50%;\r\n}\r\n","// ==== SIDEBAR ==== //\r\n\r\n.widget ul {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n"]}